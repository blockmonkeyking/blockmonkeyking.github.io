import{v as t,w as e,x as n,y as r,z as o,C as i,D as s,E as a,F as f,G as c,J as u,K as d,L as l}from"../main.js";class h extends t{constructor(t,o){super(),this.finished=!1,this.destroyed=!1,e(t);const i=n(o);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const s=this.blockLen,a=new Uint8Array(s);a.set(i.length>s?t.create().update(i).digest():i);for(let e=0;e<a.length;e++)a[e]^=54;this.iHash.update(a),this.oHash=t.create();for(let e=0;e<a.length;e++)a[e]^=106;this.oHash.update(a),r(a)}update(t){return o(this),this.iHash.update(t),this}digestInto(t){o(this),i(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:n,finished:r,destroyed:o,blockLen:i,outputLen:s}=this;return t.finished=r,t.destroyed=o,t.blockLen=i,t.outputLen=s,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const w=(t,e,n)=>new h(t,e).update(n).digest();w.create=(t,e)=>new h(t,e);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const p=BigInt(0),g=BigInt(1);function m(t,e){if("boolean"!=typeof e)throw new Error(t+" boolean expected, got "+e)}function y(t){const e=t.toString(16);return 1&e.length?"0"+e:e}function E(t){if("string"!=typeof t)throw new Error("hex string expected, got "+typeof t);return""===t?p:BigInt("0x"+t)}function b(t){return E(f(t))}function v(t){return i(t),E(f(Uint8Array.from(t).reverse()))}function B(t,e){return s(t.toString(16).padStart(2*e,"0"))}function x(t,e){return B(t,e).reverse()}function O(t,e,n){let r;if("string"==typeof e)try{r=s(e)}catch(i){throw new Error(t+" must be hex string or Uint8Array, cause: "+i)}else{if(!a(e))throw new Error(t+" must be hex string or Uint8Array");r=Uint8Array.from(e)}const o=r.length;if("number"==typeof n&&o!==n)throw new Error(t+" of length "+n+" expected, got "+o);return r}const S=t=>"bigint"==typeof t&&p<=t;function R(t,e,n,r){if(!function(t,e,n){return S(t)&&S(e)&&S(n)&&e<=t&&t<n}(e,n,r))throw new Error("expected valid "+t+": "+n+" <= n < "+r+", got "+e)}const I=t=>(g<<BigInt(t))-g;function N(t,e,n={}){if(!t||"object"!=typeof t)throw new Error("expected valid options object");function r(e,n,r){const o=t[e];if(r&&void 0===o)return;const i=typeof o;if(i!==n||null===o)throw new Error('param "'.concat(e,'" is invalid: expected ').concat(n,", got ").concat(i))}Object.entries(e).forEach(([t,e])=>r(t,e,!1)),Object.entries(n).forEach(([t,e])=>r(t,e,!0))}function q(t){const e=new WeakMap;return(n,...r)=>{const o=e.get(n);if(void 0!==o)return o;const i=t(n,...r);return e.set(n,i),i}}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const A=BigInt(0),F=BigInt(1),H=BigInt(2),U=BigInt(3),P=BigInt(4),V=BigInt(5),C=BigInt(8);function Z(t,e){const n=t%e;return n>=A?n:e+n}function k(t,e,n){let r=t;for(;e-- >A;)r*=r,r%=n;return r}function z(t,e){if(t===A)throw new Error("invert: expected non-zero number");if(e<=A)throw new Error("invert: expected positive modulus, got "+e);let n=Z(t,e),r=e,o=A,i=F;for(;n!==A;){const t=r%n,e=o-i*(r/n);r=n,n=t,o=i,i=e}if(r!==F)throw new Error("invert: does not exist");return Z(o,e)}function L(t,e){const n=(t.ORDER+F)/P,r=t.pow(e,n);if(!t.eql(t.sqr(r),e))throw new Error("Cannot find square root");return r}function j(t,e){const n=(t.ORDER-V)/C,r=t.mul(e,H),o=t.pow(r,n),i=t.mul(e,o),s=t.mul(t.mul(i,H),o),a=t.mul(i,t.sub(s,t.ONE));if(!t.eql(t.sqr(a),e))throw new Error("Cannot find square root");return a}function T(t){return t%P===U?L:t%C===V?j:function(t){if(t<BigInt(3))throw new Error("sqrt is not defined for small field");let e=t-F,n=0;for(;e%H===A;)e/=H,n++;let r=H;const o=G(t);for(;1===_(o,r);)if(r++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(1===n)return L;let i=o.pow(r,e);const s=(e+F)/H;return function(t,r){if(t.is0(r))return r;if(1!==_(t,r))throw new Error("Cannot find square root");let o=n,a=t.mul(t.ONE,i),f=t.pow(r,e),c=t.pow(r,s);for(;!t.eql(f,t.ONE);){if(t.is0(f))return t.ZERO;let e=1,n=t.sqr(f);for(;!t.eql(n,t.ONE);)if(e++,n=t.sqr(n),e===o)throw new Error("Cannot find square root");const r=F<<BigInt(o-e-1),i=t.pow(a,r);o=e,a=t.sqr(i),f=t.mul(f,a),c=t.mul(c,i)}return c}}(t)}const K=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function D(t,e,n=!1){const r=new Array(e.length).fill(n?t.ZERO:void 0),o=e.reduce((e,n,o)=>t.is0(n)?e:(r[o]=e,t.mul(e,n)),t.ONE),i=t.inv(o);return e.reduceRight((e,n,o)=>t.is0(n)?e:(r[o]=t.mul(e,r[o]),t.mul(e,n)),i),r}function _(t,e){const n=(t.ORDER-F)/H,r=t.pow(e,n),o=t.eql(r,t.ONE),i=t.eql(r,t.ZERO),s=t.eql(r,t.neg(t.ONE));if(!o&&!i&&!s)throw new Error("invalid Legendre symbol result");return o?1:i?0:-1}function G(t,e,n=!1,r={}){if(t<=A)throw new Error("invalid field: expected ORDER > 0, got "+t);let o,i;if("object"==typeof e&&null!=e){if(r.sqrt||n)throw new Error("cannot specify opts in two arguments");const t=e;t.BITS&&(o=t.BITS),t.sqrt&&(i=t.sqrt),"boolean"==typeof t.isLE&&(n=t.isLE)}else"number"==typeof e&&(o=e),r.sqrt&&(i=r.sqrt);const{nBitLength:s,nByteLength:a}=function(t,e){void 0!==e&&u(e);const n=void 0!==e?e:t.toString(2).length;return{nBitLength:n,nByteLength:Math.ceil(n/8)}}(t,o);if(a>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let f;const c=Object.freeze({ORDER:t,isLE:n,BITS:s,BYTES:a,MASK:I(s),ZERO:A,ONE:F,create:e=>Z(e,t),isValid:e=>{if("bigint"!=typeof e)throw new Error("invalid field element: expected bigint, got "+typeof e);return A<=e&&e<t},is0:t=>t===A,isValidNot0:t=>!c.is0(t)&&c.isValid(t),isOdd:t=>(t&F)===F,neg:e=>Z(-e,t),eql:(t,e)=>t===e,sqr:e=>Z(e*e,t),add:(e,n)=>Z(e+n,t),sub:(e,n)=>Z(e-n,t),mul:(e,n)=>Z(e*n,t),pow:(t,e)=>function(t,e,n){if(n<A)throw new Error("invalid exponent, negatives unsupported");if(n===A)return t.ONE;if(n===F)return e;let r=t.ONE,o=e;for(;n>A;)n&F&&(r=t.mul(r,o)),o=t.sqr(o),n>>=F;return r}(c,t,e),div:(e,n)=>Z(e*z(n,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>z(e,t),sqrt:i||(e=>(f||(f=T(t)),f(c,e))),toBytes:t=>n?x(t,a):B(t,a),fromBytes:t=>{if(t.length!==a)throw new Error("Field.fromBytes: expected "+a+" bytes, got "+t.length);return n?v(t):b(t)},invertBatch:t=>D(c,t),cmov:(t,e,n)=>n?e:t});return Object.freeze(c)}function M(t){if("bigint"!=typeof t)throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function Y(t){const e=M(t);return e+Math.ceil(e/2)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const W=BigInt(0),J=BigInt(1);function Q(t,e){const n=e.negate();return t?n:e}function X(t,e){if(!Number.isSafeInteger(t)||t<=0||t>e)throw new Error("invalid window size, expected [1.."+e+"], got W="+t)}function $(t,e){X(t,e);const n=2**t;return{windows:Math.ceil(e/t)+1,windowSize:2**(t-1),mask:I(t),maxNumber:n,shiftBy:BigInt(t)}}function tt(t,e,n){const{windowSize:r,mask:o,maxNumber:i,shiftBy:s}=n;let a=Number(t&o),f=t>>s;a>r&&(a-=i,f+=J);const c=e*r;return{nextN:f,offset:c+Math.abs(a)-1,isZero:0===a,isNeg:a<0,isNegF:e%2!=0,offsetF:c}}const et=new WeakMap,nt=new WeakMap;function rt(t){return nt.get(t)||1}function ot(t){if(t!==W)throw new Error("invalid wNAF")}function it(t,e,n,r){!function(t,e){if(!Array.isArray(t))throw new Error("array expected");t.forEach((t,n)=>{if(!(t instanceof e))throw new Error("invalid point at index "+n)})}(n,t),function(t,e){if(!Array.isArray(t))throw new Error("array of scalars expected");t.forEach((t,n)=>{if(!e.isValid(t))throw new Error("invalid scalar at index "+n)})}(r,e);const o=n.length,i=r.length;if(o!==i)throw new Error("arrays of points and scalars must have equal length");const s=t.ZERO,a=function(t){let e;for(e=0;t>p;t>>=g,e+=1);return e}(BigInt(o));let f=1;a>12?f=a-3:a>4?f=a-2:a>0&&(f=2);const c=I(f),u=new Array(Number(c)+1).fill(s);let d=s;for(let l=Math.floor((e.BITS-1)/f)*f;l>=0;l-=f){u.fill(s);for(let e=0;e<i;e++){const t=r[e],o=Number(t>>BigInt(l)&c);u[o]=u[o].add(n[e])}let t=s;for(let e=u.length-1,n=s;e>0;e--)n=n.add(u[e]),t=t.add(n);if(d=d.add(t),0!==l)for(let e=0;e<f;e++)d=d.double()}return d}function st(t,e){if(e){if(e.ORDER!==t)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return function(t){N(t,K.reduce((t,e)=>(t[e]="function",t),{ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"}))}(e),e}return G(t)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function at(t){void 0!==t.lowS&&m("lowS",t.lowS),void 0!==t.prehash&&m("prehash",t.prehash)}class ft extends Error{constructor(t=""){super(t)}}const ct={Err:ft,_tlv:{encode:(t,e)=>{const{Err:n}=ct;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(1&e.length)throw new n("tlv.encode: unpadded data");const r=e.length/2,o=y(r);if(o.length/2&128)throw new n("tlv.encode: long form length too big");const i=r>127?y(o.length/2|128):"";return y(t)+i+o+e},decode(t,e){const{Err:n}=ct;let r=0;if(t<0||t>256)throw new n("tlv.encode: wrong tag");if(e.length<2||e[r++]!==t)throw new n("tlv.decode: wrong tlv");const o=e[r++];let i=0;if(!!(128&o)){const t=127&o;if(!t)throw new n("tlv.decode(long): indefinite length not supported");if(t>4)throw new n("tlv.decode(long): byte length is too big");const s=e.subarray(r,r+t);if(s.length!==t)throw new n("tlv.decode: length bytes not complete");if(0===s[0])throw new n("tlv.decode(long): zero leftmost byte");for(const e of s)i=i<<8|e;if(r+=t,i<128)throw new n("tlv.decode(long): not minimal encoding")}else i=o;const s=e.subarray(r,r+i);if(s.length!==i)throw new n("tlv.decode: wrong value length");return{v:s,l:e.subarray(r+i)}}},_int:{encode(t){const{Err:e}=ct;if(t<ut)throw new e("integer: negative integers are not allowed");let n=y(t);if(8&Number.parseInt(n[0],16)&&(n="00"+n),1&n.length)throw new e("unexpected DER parsing assertion: unpadded hex");return n},decode(t){const{Err:e}=ct;if(128&t[0])throw new e("invalid signature integer: negative");if(0===t[0]&&!(128&t[1]))throw new e("invalid signature integer: unnecessary leading zero");return b(t)}},toSig(t){const{Err:e,_int:n,_tlv:r}=ct,o=O("signature",t),{v:i,l:s}=r.decode(48,o);if(s.length)throw new e("invalid signature: left bytes after parsing");const{v:a,l:f}=r.decode(2,i),{v:c,l:u}=r.decode(2,f);if(u.length)throw new e("invalid signature: left bytes after parsing");return{r:n.decode(a),s:n.decode(c)}},hexFromSig(t){const{_tlv:e,_int:n}=ct,r=e.encode(2,n.encode(t.r))+e.encode(2,n.encode(t.s));return e.encode(48,r)}},ut=BigInt(0),dt=BigInt(1),lt=BigInt(2),ht=BigInt(3),wt=BigInt(4);function pt(t,e,n){const{BYTES:r}=t;return function(o){let i;if("bigint"==typeof o)i=o;else{let n=O("private key",o);if(e){if(!e.includes(2*n.length))throw new Error("invalid private key");const t=new Uint8Array(r);t.set(n,t.length-n.length),n=t}try{i=t.fromBytes(n)}catch(s){throw new Error("invalid private key: expected ui8a of size ".concat(r,", got ").concat(typeof o))}}if(n&&(i=t.create(i)),!t.isValidNot0(i))throw new Error("invalid private key: out of range [1..N-1]");return i}}function gt(t,e={}){const{Fp:n,Fn:r}=function(t,e,n={}){if(!e||"object"!=typeof e)throw new Error("expected valid ".concat(t," CURVE object"));for(const s of["p","n","h"]){const t=e[s];if(!("bigint"==typeof t&&t>W))throw new Error("CURVE.".concat(s," must be positive bigint"))}const r=st(e.p,n.Fp),o=st(e.n,n.Fn),i=["Gx","Gy","a","b"];for(const s of i)if(!r.isValid(e[s]))throw new Error("CURVE.".concat(s," must be valid field element of CURVE.Fp"));return{Fp:r,Fn:o}}("weierstrass",t,e),{h:o,n:s}=t;N(e,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});const{endo:a}=e;if(a&&(!n.is0(t.a)||"bigint"!=typeof a.beta||"function"!=typeof a.splitScalar))throw new Error('invalid endo: expected "beta": bigint and "splitScalar": function');function u(){if(!n.isOdd)throw new Error("compression is not supported: Field does not have .isOdd()")}const d=e.toBytes||function(t,e,r){const{x:o,y:i}=e.toAffine(),s=n.toBytes(o);if(m("isCompressed",r),r){u();const t=!n.isOdd(i);return c(mt(t),s)}return c(Uint8Array.of(4),s,n.toBytes(i))},l=e.fromBytes||function(t){i(t);const e=n.BYTES,r=e+1,o=2*e+1,s=t.length,a=t[0],f=t.subarray(1);if(s!==r||2!==a&&3!==a){if(s===o&&4===a){const t=n.fromBytes(f.subarray(0*e,1*e)),r=n.fromBytes(f.subarray(1*e,2*e));if(!w(t,r))throw new Error("bad point: is not on curve");return{x:t,y:r}}throw new Error("bad point: got length ".concat(s,", expected compressed=").concat(r," or uncompressed=").concat(o))}{const t=n.fromBytes(f);if(!n.isValid(t))throw new Error("bad point: is not on curve, wrong x");const e=h(t);let r;try{r=n.sqrt(e)}catch(c){const t=c instanceof Error?": "+c.message:"";throw new Error("bad point: is not on curve, sqrt error"+t)}u();return!(1&~a)!==n.isOdd(r)&&(r=n.neg(r)),{x:t,y:r}}},h=function(t,e,n){return function(r){const o=t.sqr(r),i=t.mul(o,r);return t.add(t.add(i,t.mul(r,e)),n)}}(n,t.a,t.b);function w(t,e){const r=n.sqr(e),o=h(t);return n.eql(r,o)}if(!w(t.Gx,t.Gy))throw new Error("bad curve params: generator point");const p=n.mul(n.pow(t.a,ht),wt),g=n.mul(n.sqr(t.b),BigInt(27));if(n.is0(n.add(p,g)))throw new Error("bad curve params: a or b");function y(t,e,r=!1){if(!n.isValid(e)||r&&n.is0(e))throw new Error("bad point coordinate ".concat(t));return e}function E(t){if(!(t instanceof x))throw new Error("ProjectivePoint expected")}const b=q((t,e)=>{const{px:r,py:o,pz:i}=t;if(n.eql(i,n.ONE))return{x:r,y:o};const s=t.is0();null==e&&(e=s?n.ONE:n.inv(i));const a=n.mul(r,e),f=n.mul(o,e),c=n.mul(i,e);if(s)return{x:n.ZERO,y:n.ZERO};if(!n.eql(c,n.ONE))throw new Error("invZ was invalid");return{x:a,y:f}}),v=q(t=>{if(t.is0()){if(e.allowInfinityPoint&&!n.is0(t.py))return;throw new Error("bad point: ZERO")}const{x:r,y:o}=t.toAffine();if(!n.isValid(r)||!n.isValid(o))throw new Error("bad point: x or y not field elements");if(!w(r,o))throw new Error("bad point: equation left != right");if(!t.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});function B(t,e,r,o,i){return r=new x(n.mul(r.px,t),r.py,r.pz),e=Q(o,e),r=Q(i,r),e.add(r)}class x{constructor(t,e,n){this.px=y("x",t),this.py=y("y",e,!0),this.pz=y("z",n),Object.freeze(this)}static fromAffine(t){const{x:e,y:r}=t||{};if(!t||!n.isValid(e)||!n.isValid(r))throw new Error("invalid affine point");if(t instanceof x)throw new Error("projective point not allowed");return n.is0(e)&&n.is0(r)?x.ZERO:new x(e,r,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(t){return function(t,e,n){const r=D(t.Fp,n.map(t=>t.pz));return n.map((t,e)=>t.toAffine(r[e])).map(t.fromAffine)}(x,0,t)}static fromBytes(t){return i(t),x.fromHex(t)}static fromHex(t){const e=x.fromAffine(l(O("pointHex",t)));return e.assertValidity(),e}static fromPrivateKey(t){const n=pt(r,e.allowedPrivateKeyLengths,e.wrapPrivateKey);return x.BASE.multiply(n(t))}static msm(t,e){return it(x,r,t,e)}precompute(t=8,e=!0){return R.setWindowSize(this,t),e||this.multiply(ht),this}_setWindowSize(t){this.precompute(t)}assertValidity(){v(this)}hasEvenY(){const{y:t}=this.toAffine();if(!n.isOdd)throw new Error("Field doesn't support isOdd");return!n.isOdd(t)}equals(t){E(t);const{px:e,py:r,pz:o}=this,{px:i,py:s,pz:a}=t,f=n.eql(n.mul(e,a),n.mul(i,o)),c=n.eql(n.mul(r,a),n.mul(s,o));return f&&c}negate(){return new x(this.px,n.neg(this.py),this.pz)}double(){const{a:e,b:r}=t,o=n.mul(r,ht),{px:i,py:s,pz:a}=this;let f=n.ZERO,c=n.ZERO,u=n.ZERO,d=n.mul(i,i),l=n.mul(s,s),h=n.mul(a,a),w=n.mul(i,s);return w=n.add(w,w),u=n.mul(i,a),u=n.add(u,u),f=n.mul(e,u),c=n.mul(o,h),c=n.add(f,c),f=n.sub(l,c),c=n.add(l,c),c=n.mul(f,c),f=n.mul(w,f),u=n.mul(o,u),h=n.mul(e,h),w=n.sub(d,h),w=n.mul(e,w),w=n.add(w,u),u=n.add(d,d),d=n.add(u,d),d=n.add(d,h),d=n.mul(d,w),c=n.add(c,d),h=n.mul(s,a),h=n.add(h,h),d=n.mul(h,w),f=n.sub(f,d),u=n.mul(h,l),u=n.add(u,u),u=n.add(u,u),new x(f,c,u)}add(e){E(e);const{px:r,py:o,pz:i}=this,{px:s,py:a,pz:f}=e;let c=n.ZERO,u=n.ZERO,d=n.ZERO;const l=t.a,h=n.mul(t.b,ht);let w=n.mul(r,s),p=n.mul(o,a),g=n.mul(i,f),m=n.add(r,o),y=n.add(s,a);m=n.mul(m,y),y=n.add(w,p),m=n.sub(m,y),y=n.add(r,i);let b=n.add(s,f);return y=n.mul(y,b),b=n.add(w,g),y=n.sub(y,b),b=n.add(o,i),c=n.add(a,f),b=n.mul(b,c),c=n.add(p,g),b=n.sub(b,c),d=n.mul(l,y),c=n.mul(h,g),d=n.add(c,d),c=n.sub(p,d),d=n.add(p,d),u=n.mul(c,d),p=n.add(w,w),p=n.add(p,w),g=n.mul(l,g),y=n.mul(h,y),p=n.add(p,g),g=n.sub(w,g),g=n.mul(l,g),y=n.add(y,g),w=n.mul(p,y),u=n.add(u,w),w=n.mul(b,y),c=n.mul(m,c),c=n.sub(c,w),w=n.mul(m,p),d=n.mul(b,d),d=n.add(d,w),new x(c,u,d)}subtract(t){return this.add(t.negate())}is0(){return this.equals(x.ZERO)}multiply(t){const{endo:n}=e;if(!r.isValidNot0(t))throw new Error("invalid scalar: out of range");let o,i;const s=t=>R.wNAFCached(this,t,x.normalizeZ);if(n){const{k1neg:e,k1:r,k2neg:a,k2:f}=n.splitScalar(t),{p:c,f:u}=s(r),{p:d,f:l}=s(f);i=u.add(l),o=B(n.beta,c,d,e,a)}else{const{p:e,f:n}=s(t);o=e,i=n}return x.normalizeZ([o,i])[0]}multiplyUnsafe(t){const{endo:n}=e,o=this;if(!r.isValid(t))throw new Error("invalid scalar: out of range");if(t===ut||o.is0())return x.ZERO;if(t===dt)return o;if(R.hasPrecomputes(this))return this.multiply(t);if(n){const{k1neg:e,k1:r,k2neg:i,k2:s}=n.splitScalar(t),{p1:a,p2:f}=function(t,e,n,r){let o=e,i=t.ZERO,s=t.ZERO;for(;n>W||r>W;)n&J&&(i=i.add(o)),r&J&&(s=s.add(o)),o=o.double(),n>>=J,r>>=J;return{p1:i,p2:s}}(x,o,r,s);return B(n.beta,a,f,e,i)}return R.wNAFCachedUnsafe(o,t)}multiplyAndAddUnsafe(t,e,n){const r=this.multiplyUnsafe(e).add(t.multiplyUnsafe(n));return r.is0()?void 0:r}toAffine(t){return b(this,t)}isTorsionFree(){const{isTorsionFree:t}=e;return o===dt||(t?t(x,this):R.wNAFCachedUnsafe(this,s).is0())}clearCofactor(){const{clearCofactor:t}=e;return o===dt?this:t?t(x,this):this.multiplyUnsafe(o)}toBytes(t=!0){return m("isCompressed",t),this.assertValidity(),d(x,this,t)}toRawBytes(t=!0){return this.toBytes(t)}toHex(t=!0){return f(this.toBytes(t))}toString(){return"<Point ".concat(this.is0()?"ZERO":this.toHex(),">")}}x.BASE=new x(t.Gx,t.Gy,n.ONE),x.ZERO=new x(n.ZERO,n.ONE,n.ZERO),x.Fp=n,x.Fn=r;const S=r.BITS,R=function(t,e){return{constTimeNegate:Q,hasPrecomputes:t=>1!==rt(t),unsafeLadder(e,n,r=t.ZERO){let o=e;for(;n>W;)n&J&&(r=r.add(o)),o=o.double(),n>>=J;return r},precomputeWindow(t,n){const{windows:r,windowSize:o}=$(n,e),i=[];let s=t,a=s;for(let e=0;e<r;e++){a=s,i.push(a);for(let t=1;t<o;t++)a=a.add(s),i.push(a);s=a.double()}return i},wNAF(n,r,o){let i=t.ZERO,s=t.BASE;const a=$(n,e);for(let t=0;t<a.windows;t++){const{nextN:e,offset:n,isZero:f,isNeg:c,isNegF:u,offsetF:d}=tt(o,t,a);o=e,f?s=s.add(Q(u,r[d])):i=i.add(Q(c,r[n]))}return ot(o),{p:i,f:s}},wNAFUnsafe(n,r,o,i=t.ZERO){const s=$(n,e);for(let t=0;t<s.windows&&o!==W;t++){const{nextN:e,offset:n,isZero:a,isNeg:f}=tt(o,t,s);if(o=e,!a){const t=r[n];i=i.add(f?t.negate():t)}}return ot(o),i},getPrecomputes(t,e,n){let r=et.get(e);return r||(r=this.precomputeWindow(e,t),1!==t&&("function"==typeof n&&(r=n(r)),et.set(e,r))),r},wNAFCached(t,e,n){const r=rt(t);return this.wNAF(r,this.getPrecomputes(r,t,n),e)},wNAFCachedUnsafe(t,e,n,r){const o=rt(t);return 1===o?this.unsafeLadder(t,e,r):this.wNAFUnsafe(o,this.getPrecomputes(o,t,n),e,r)},setWindowSize(t,n){X(n,e),nt.set(t,n),et.delete(t)}}}(x,e.endo?Math.ceil(S/2):S);return x}function mt(t){return Uint8Array.of(t?2:3)}function yt(t,e,n={}){N(e,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});const r=e.randomBytes||d,o=e.hmac||((t,...n)=>w(e.hash,t,c(...n))),{Fp:i,Fn:u}=t,{ORDER:l,BITS:h}=u;function p(t){return t>l>>dt}function g(t,e){if(!u.isValidNot0(e))throw new Error("invalid signature ".concat(t,": out of range 1..CURVE.n"))}class m{constructor(t,e,n){g("r",t),g("s",e),this.r=t,this.s=e,null!=n&&(this.recovery=n),Object.freeze(this)}static fromCompact(t){const e=u.BYTES,n=O("compactSignature",t,2*e);return new m(u.fromBytes(n.subarray(0,e)),u.fromBytes(n.subarray(e,2*e)))}static fromDER(t){const{r:e,s:n}=ct.toSig(O("DER",t));return new m(e,n)}assertValidity(){}addRecoveryBit(t){return new m(this.r,this.s,t)}recoverPublicKey(e){const n=i.ORDER,{r:r,s:o,recovery:s}=this;if(null==s||![0,1,2,3].includes(s))throw new Error("recovery id invalid");if(l*lt<n&&s>1)throw new Error("recovery id is ambiguous for h>1 curve");const a=2===s||3===s?r+l:r;if(!i.isValid(a))throw new Error("recovery id 2 or 3 invalid");const f=i.toBytes(a),d=t.fromHex(c(mt(!(1&s)),f)),h=u.inv(a),w=A(O("msgHash",e)),p=u.create(-w*h),g=u.create(o*h),m=t.BASE.multiplyUnsafe(p).add(d.multiplyUnsafe(g));if(m.is0())throw new Error("point at infinify");return m.assertValidity(),m}hasHighS(){return p(this.s)}normalizeS(){return this.hasHighS()?new m(this.r,u.neg(this.s),this.recovery):this}toBytes(t){if("compact"===t)return c(u.toBytes(this.r),u.toBytes(this.s));if("der"===t)return s(ct.hexFromSig(this));throw new Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return f(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return f(this.toBytes("compact"))}}const y=pt(u,n.allowedPrivateKeyLengths,n.wrapPrivateKey),E={isValidPrivateKey(t){try{return y(t),!0}catch(e){return!1}},normPrivateKeyToScalar:y,randomPrivateKey:()=>{const t=l;return function(t,e,n=!1){const r=t.length,o=M(e),i=Y(e);if(r<16||r<i||r>1024)throw new Error("expected "+i+"-1024 bytes of input, got "+r);const s=Z(n?v(t):b(t),e-F)+F;return n?x(s,o):B(s,o)}(r(Y(t)),t)},precompute:(e=8,n=t.BASE)=>n.precompute(e,!1)};function S(e){if("bigint"==typeof e)return!1;if(e instanceof t)return!0;const r=O("key",e).length,o=i.BYTES,s=o+1,a=2*o+1;return n.allowedPrivateKeyLengths||u.BYTES===s?void 0:r===s||r===a}const q=e.bits2int||function(t){if(t.length>8192)throw new Error("input is too large");const e=b(t),n=8*t.length-h;return n>0?e>>BigInt(n):e},A=e.bits2int_modN||function(t){return u.create(q(t))},H=I(h);function U(t){return R("num < 2^"+h,t,ut,H),u.toBytes(t)}function P(n,o,s=V){if(["recovered","canonical"].some(t=>t in s))throw new Error("sign() legacy options not supported");const{hash:a}=e;let{lowS:f,prehash:d,extraEntropy:l}=s;null==f&&(f=!0),n=O("msgHash",n),at(s),d&&(n=O("prehashed msgHash",a(n)));const h=A(n),w=y(o),g=[U(w),U(h)];if(null!=l&&!1!==l){const t=!0===l?r(i.BYTES):l;g.push(O("extraEntropy",t))}const E=c(...g),b=h;return{seed:E,k2sig:function(e){const n=q(e);if(!u.isValidNot0(n))return;const r=u.inv(n),o=t.BASE.multiply(n).toAffine(),i=u.create(o.x);if(i===ut)return;const s=u.create(r*u.create(b+i*w));if(s===ut)return;let a=(o.x===i?0:2)|Number(o.y&dt),c=s;return f&&p(s)&&(c=function(t){return p(t)?u.neg(t):t}(s),a^=1),new m(i,c,a)}}}const V={lowS:e.lowS,prehash:!1},C={lowS:e.lowS,prehash:!1};return t.BASE.precompute(8),Object.freeze({getPublicKey:function(e,n=!0){return t.fromPrivateKey(e).toBytes(n)},getSharedSecret:function(e,n,r=!0){if(!0===S(e))throw new Error("first arg must be private key");if(!1===S(n))throw new Error("second arg must be public key");return t.fromHex(n).multiply(y(e)).toBytes(r)},sign:function(t,n,r=V){const{seed:i,k2sig:s}=P(t,n,r);return function(t,e,n){if("number"!=typeof t||t<2)throw new Error("hashLen must be a number");if("number"!=typeof e||e<2)throw new Error("qByteLen must be a number");if("function"!=typeof n)throw new Error("hmacFn must be a function");const r=t=>new Uint8Array(t),o=t=>Uint8Array.of(t);let i=r(t),s=r(t),a=0;const f=()=>{i.fill(1),s.fill(0),a=0},u=(...t)=>n(s,i,...t),d=(t=r(0))=>{s=u(o(0),t),i=u(),0!==t.length&&(s=u(o(1),t),i=u())},l=()=>{if(a++>=1e3)throw new Error("drbg: tried 1000 values");let t=0;const n=[];for(;t<e;){i=u();const e=i.slice();n.push(e),t+=i.length}return c(...n)};return(t,e)=>{let n;for(f(),d(t);!(n=e(l()));)d();return f(),n}}(e.hash.outputLen,u.BYTES,o)(i,s)},verify:function(n,r,o,i=C){const s=n;r=O("msgHash",r),o=O("publicKey",o),at(i);const{lowS:f,prehash:c,format:d}=i;if("strict"in i)throw new Error("options.strict was renamed to lowS");if(void 0!==d&&!["compact","der","js"].includes(d))throw new Error('format must be "compact", "der" or "js"');const l="string"==typeof s||a(s),h=!l&&!d&&"object"==typeof s&&null!==s&&"bigint"==typeof s.r&&"bigint"==typeof s.s;if(!l&&!h)throw new Error("invalid signature, expected Uint8Array, hex string or Signature instance");let w,p;try{if(h){if(void 0!==d&&"js"!==d)throw new Error("invalid format");w=new m(s.r,s.s)}if(l){try{"compact"!==d&&(w=m.fromDER(s))}catch(S){if(!(S instanceof ct.Err))throw S}w||"der"===d||(w=m.fromCompact(s))}p=t.fromHex(o)}catch(R){return!1}if(!w)return!1;if(f&&w.hasHighS())return!1;c&&(r=e.hash(r));const{r:g,s:y}=w,E=A(r),b=u.inv(y),v=u.create(E*b),B=u.create(g*b),x=t.BASE.multiplyUnsafe(v).add(p.multiplyUnsafe(B));return!x.is0()&&u.create(x.x)===g},utils:E,Point:t,Signature:m})}function Et(t){const{CURVE:e,curveOpts:n}=function(t){const e={a:t.a,b:t.b,p:t.Fp.ORDER,n:t.n,h:t.h,Gx:t.Gx,Gy:t.Gy};return{CURVE:e,curveOpts:{Fp:t.Fp,Fn:G(e.n,t.nBitLength),allowedPrivateKeyLengths:t.allowedPrivateKeyLengths,allowInfinityPoint:t.allowInfinityPoint,endo:t.endo,wrapPrivateKey:t.wrapPrivateKey,isTorsionFree:t.isTorsionFree,clearCofactor:t.clearCofactor,fromBytes:t.fromBytes,toBytes:t.toBytes}}}(t);return{CURVE:e,curveOpts:n,ecdsaOpts:{hash:t.hash,hmac:t.hmac,randomBytes:t.randomBytes,lowS:t.lowS,bits2int:t.bits2int,bits2int_modN:t.bits2int_modN}}}function bt(t){const{CURVE:e,curveOpts:n,ecdsaOpts:r}=Et(t);return function(t,e){return Object.assign({},e,{ProjectivePoint:e.Point,CURVE:t})}(t,yt(gt(e,n),r,n))}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const vt={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")};BigInt(0);const Bt=BigInt(1),xt=BigInt(2),Ot=(t,e)=>(t+e/xt)/e;const St=G(vt.p,void 0,void 0,{sqrt:function(t){const e=vt.p,n=BigInt(3),r=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),a=BigInt(44),f=BigInt(88),c=t*t*t%e,u=c*c*t%e,d=k(u,n,e)*u%e,l=k(d,n,e)*u%e,h=k(l,xt,e)*c%e,w=k(h,o,e)*h%e,p=k(w,i,e)*w%e,g=k(p,a,e)*p%e,m=k(g,f,e)*g%e,y=k(m,a,e)*p%e,E=k(y,n,e)*u%e,b=k(E,s,e)*w%e,v=k(b,r,e)*c%e,B=k(v,xt,e);if(!St.eql(St.sqr(B),t))throw new Error("Cannot find square root");return B}}),Rt=function(t,e){const n=e=>bt({...t,hash:e});return{...n(e),create:n}}({...vt,Fp:St,lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=vt.n,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-Bt*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=n,s=BigInt("0x100000000000000000000000000000000"),a=Ot(i*t,e),f=Ot(-r*t,e);let c=Z(t-a*n-f*o,e),u=Z(-a*r-f*i,e);const d=c>s,l=u>s;if(d&&(c=e-c),l&&(u=e-u),c>s||u>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:d,k1:c,k2neg:l,k2:u}}}},l);export{Rt as secp256k1};
